<<<<<<< HEAD
{"id":412,"assetBundleId":-1,"data":[[],"Spine\/Skeleton Fill",null,["_STRAIGHT_ALPHA_INPUT","SHADOWS_DEPTH","STEREO_CUBEMAP_RENDER_ON","STEREO_INSTANCING_ON","STEREO_MULTIVIEW_ON","UNITY_SINGLE_PASS_STEREO","_","SHADOWS_CUBE"],[[0,0,"Normal",0,"",0,[4,null],[0,null],[0,null],[[1,null],[10,null],[0,null]],[[1,null],[10,null],[0,null]],[15,null],[0,null],[0,null],[0,"_StencilRef"],[255,null],[255,null],[[0,null],[0,null],[0,null],[0,"_StencilComp"]],[[0,null],[0,null],[0,null],[8,null]],[[0,null],[0,null],[0,null],[8,null]],[["IGNOREPROJECTOR","true"],["PreviewType","Plane"],["QUEUE","Transparent"],["RenderType","Transparent"]],["STEREO_CUBEMAP_RENDER_ON","STEREO_INSTANCING_ON","STEREO_MULTIVIEW_ON","UNITY_SINGLE_PASS_STEREO","_STRAIGHT_ALPHA_INPUT","_"],[[["_","_STRAIGHT_ALPHA_INPUT"],0]],[[0,0,[],"\n#version 100\n\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nattribute highp vec4 in_POSITION0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp vec4 in_COLOR0;\nvarying highp vec2 vs_TEXCOORD0;\nvarying highp vec4 vs_COLOR0;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;\n    vs_COLOR0 = in_COLOR0;\n    return;\n}\n\n","\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tvec4 _FillColor;\nuniform \tfloat _FillPhase;\nuniform lowp sampler2D _MainTex;\nvarying highp vec2 vs_TEXCOORD0;\nvarying highp vec4 vs_COLOR0;\n#define SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nlowp vec4 u_xlat10_0;\nvec3 u_xlat1;\nvoid main()\n{\n    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat0 = u_xlat10_0.wxyz * vs_COLOR0.wxyz;\n    u_xlat1.xyz = _FillColor.xyz * u_xlat0.xxx + (-u_xlat0.yzw);\n    SV_Target0.xyz = vec3(_FillPhase) * u_xlat1.xyz + u_xlat0.yzw;\n    SV_Target0.w = u_xlat0.x;\n    return;\n}\n\n",0],[0,0,["_STRAIGHT_ALPHA_INPUT"],"\n#version 100\n\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nattribute highp vec4 in_POSITION0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp vec4 in_COLOR0;\nvarying highp vec2 vs_TEXCOORD0;\nvarying highp vec4 vs_COLOR0;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;\n    vs_COLOR0 = in_COLOR0;\n    return;\n}\n\n","\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tvec4 _FillColor;\nuniform \tfloat _FillPhase;\nuniform lowp sampler2D _MainTex;\nvarying highp vec2 vs_TEXCOORD0;\nvarying highp vec4 vs_COLOR0;\n#define SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nlowp vec4 u_xlat10_0;\nvec3 u_xlat1;\nvoid main()\n{\n    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat10_0.xyz = u_xlat10_0.www * u_xlat10_0.xyz;\n    u_xlat0 = u_xlat10_0 * vs_COLOR0;\n    u_xlat1.xyz = _FillColor.xyz * u_xlat0.www + (-u_xlat0.xyz);\n    SV_Target0.xyz = vec3(_FillPhase) * u_xlat1.xyz + u_xlat0.xyz;\n    SV_Target0.w = u_xlat0.w;\n    return;\n}\n\n",0]],[],0],[1,0,"Caster",8,"",0,[4,null],[1,null],[0,null],[[1,null],[10,null],[0,null]],[[1,null],[10,null],[0,null]],[15,null],[1,null],[1,null],[0,"_StencilRef"],[255,null],[255,null],[[0,null],[0,null],[0,null],[0,"_StencilComp"]],[[0,null],[0,null],[0,null],[8,null]],[[0,null],[0,null],[0,null],[8,null]],[["IGNOREPROJECTOR","true"],["LIGHTMODE","SHADOWCASTER"],["PreviewType","Plane"],["QUEUE","Transparent"],["RenderType","Transparent"],["SHADOWSUPPORT","true"]],["SHADOWS_CUBE","SHADOWS_DEPTH","STEREO_CUBEMAP_RENDER_ON","STEREO_INSTANCING_ON","STEREO_MULTIVIEW_ON","UNITY_SINGLE_PASS_STEREO"],[[["SHADOWS_DEPTH"],0],[["SHADOWS_CUBE"],0]],[],[],0]],[],[["_FillColor",0,1,1,1,1,""],["_FillPhase",3,0,0,1,0,""],["_MainTex",4,0,0,0,0,"white"],["_Cutoff",3,0.100000001490116,0,1,0,""],["_StraightAlphaInput",2,0,0,0,0,""],["_StencilRef",2,1,0,0,0,""],["_StencilComp",2,8,0,0,0,""],["_OutlineWidth",3,3,0,8,0,""],["_OutlineColor",0,1,1,0,1,""],["_OutlineReferenceTexWidth",2,1024,0,0,0,""],["_ThresholdEnd",3,0.25,0,1,0,""],["_OutlineSmoothness",3,1,0,1,0,""],["_Use8Neighbourhood",2,1,0,0,0,""],["_OutlineOpaqueAlpha",3,1,0,1,0,""],["_OutlineMipLevel",3,0,0,3,0,""]],0,20,0,0,0]}
=======
{"id":412,"assetBundleId":-1,"data":[[],"Spine\/SkeletonGraphic",null,["_CANVAS_GROUP_COMPATIBLE","_STRAIGHT_ALPHA_INPUT","STEREO_CUBEMAP_RENDER_ON","STEREO_INSTANCING_ON","STEREO_MULTIVIEW_ON","UNITY_SINGLE_PASS_STEREO","_","__","UNITY_UI_ALPHACLIP"],[[0,0,"Normal",0,"",0,[0,"unity_GUIZTestMode"],[0,null],[0,null],[[1,null],[10,null],[0,null]],[[1,null],[10,null],[0,null]],[0,"_ColorMask"],[0,null],[0,null],[0,"_Stencil"],[0,"_StencilReadMask"],[0,"_StencilWriteMask"],[[0,"_StencilOp"],[0,null],[0,null],[0,"_StencilComp"]],[[0,null],[0,null],[0,null],[8,null]],[[0,null],[0,null],[0,null],[8,null]],[["CanUseSpriteAtlas","true"],["IGNOREPROJECTOR","true"],["PreviewType","Plane"],["QUEUE","Transparent"],["RenderType","Transparent"]],["STEREO_CUBEMAP_RENDER_ON","STEREO_INSTANCING_ON","STEREO_MULTIVIEW_ON","UNITY_SINGLE_PASS_STEREO","_CANVAS_GROUP_COMPATIBLE","_STRAIGHT_ALPHA_INPUT","_","__","UNITY_UI_ALPHACLIP"],[],[[0,0,["_STRAIGHT_ALPHA_INPUT"],"\n#version 100\n\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tmediump vec4 _Color;\nattribute highp vec4 in_POSITION0;\nattribute highp vec4 in_COLOR0;\nattribute highp vec2 in_TEXCOORD0;\nvarying mediump vec4 vs_COLOR0;\nvarying mediump vec2 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvec4 u_xlat0;\nmediump vec4 u_xlat16_0;\nvec4 u_xlat1;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    u_xlat16_0.xyz = _Color.www * _Color.xyz;\n    u_xlat16_0.w = _Color.w;\n    u_xlat0 = u_xlat16_0 * in_COLOR0;\n    vs_COLOR0 = u_xlat0;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;\n    vs_TEXCOORD1 = in_POSITION0;\n    return;\n}\n\n","\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tmediump vec4 _TextureSampleAdd;\nuniform \tvec4 _ClipRect;\nuniform lowp sampler2D _MainTex;\nvarying mediump vec4 vs_COLOR0;\nvarying mediump vec2 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\n#define SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nbvec4 u_xlatb0;\nmediump vec4 u_xlat16_1;\nlowp vec4 u_xlat10_1;\nmediump vec4 u_xlat16_2;\nvoid main()\n{\n    u_xlatb0.xy = greaterThanEqual(vs_TEXCOORD1.xyxx, _ClipRect.xyxx).xy;\n    u_xlatb0.zw = greaterThanEqual(_ClipRect.zzzw, vs_TEXCOORD1.xxxy).zw;\n    u_xlat0.x = u_xlatb0.x ? float(1.0) : 0.0;\n    u_xlat0.y = u_xlatb0.y ? float(1.0) : 0.0;\n    u_xlat0.z = u_xlatb0.z ? float(1.0) : 0.0;\n    u_xlat0.w = u_xlatb0.w ? float(1.0) : 0.0;\n;\n    u_xlat0.xy = u_xlat0.zw * u_xlat0.xy;\n    u_xlat0.x = u_xlat0.y * u_xlat0.x;\n    u_xlat10_1 = texture2D(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat16_2.xyz = u_xlat10_1.xyz * u_xlat10_1.www + _TextureSampleAdd.xyz;\n    u_xlat16_2.w = u_xlat10_1.w + _TextureSampleAdd.w;\n    u_xlat16_1 = u_xlat16_2 * vs_COLOR0;\n    u_xlat0 = u_xlat0.xxxx * u_xlat16_1;\n    SV_Target0 = u_xlat0;\n    return;\n}\n\n",0]],[],0]],[],[["_MainTex",4,0,0,0,0,"white"],["_StraightAlphaInput",2,0,0,0,0,""],["_CanvasGroupCompatible",2,1,0,0,0,""],["_Color",0,1,1,1,1,""],["_StencilComp",2,8,0,0,0,""],["_Stencil",2,0,0,0,0,""],["_StencilOp",2,0,0,0,0,""],["_StencilWriteMask",2,255,0,0,0,""],["_StencilReadMask",2,255,0,0,0,""],["_ColorMask",2,15,0,0,0,""],["_UseUIAlphaClip",2,0,0,0,0,""],["_OutlineWidth",3,3,0,8,0,""],["_OutlineColor",0,1,1,0,1,""],["_OutlineReferenceTexWidth",2,1024,0,0,0,""],["_ThresholdEnd",3,0.25,0,1,0,""],["_OutlineSmoothness",3,1,0,1,0,""],["_Use8Neighbourhood",2,1,0,0,0,""],["_OutlineOpaqueAlpha",3,1,0,1,0,""],["_OutlineMipLevel",3,0,0,3,0,""]],null,null,0,0,0]}
>>>>>>> 022d62e (업뎃)
